/*
 * This file was generated by the Gradle 'init' task.
 */
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("org.jetbrains.kotlin.jvm")
    id("tachiload.kotlin-application-conventions")
    id("com.github.johnrengelman.shadow") version "6.1.0"
}

repositories {
    google()
    maven { url = uri("https://jitpack.io") }
    mavenCentral()
    jcenter()
}

dependencies {
    // Use the Kotlin JDK 8 standard library.
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.4.20"))
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.20")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:29.0-jre")
    compileOnly("com.github.salomonbrys.kotson:kotson:2.5.0")

    // HTML parser
    implementation("org.jsoup:jsoup:1.13.1")

    // ReactiveX
    implementation("io.reactivex:rxandroid:1.2.1")
    implementation("io.reactivex:rxjava:1.3.8")
    implementation("com.jakewharton.rxrelay:rxrelay:1.2.0")
    implementation("com.github.pwittchen:reactivenetwork:0.13.0")

    // Network client
    val okhttpVersion = "4.10.0-RC1"
    //val okhttpVersion = "3.12.0"
    implementation("com.squareup.okhttp3:okhttp:$okhttpVersion")
    implementation("com.squareup.okhttp3:logging-interceptor:$okhttpVersion")
    implementation("com.squareup.okhttp3:okhttp-dnsoverhttps:$okhttpVersion")
    implementation("com.squareup.okio:okio:2.9.0")

    // Dependency injection
    implementation("com.github.inorichi.injekt:injekt-core:65b0440")

    // JSON
    val kotlinSerializationVersion = "1.0.1"
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinSerializationVersion")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-protobuf:$kotlinSerializationVersion")
    implementation("com.google.code.gson:gson:2.8.6")
    implementation("com.github.salomonbrys.kotson:kotson:2.5.0")
    implementation("org.json:json:20201115")

    // Coroutines
    val coroutinesVersion = "1.4.2"
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion")

    // JavaScript engine
    implementation("com.squareup.duktape:duktape-android:1.3.0")

    // CRON
    implementation("it.sauronsoftware.cron4j:cron4j:2.2.5")
}

application {
    // Define the main class for the application.
    mainClass.set("tachiload.app.AppKt")
    @Suppress("DEPRECATION")
    mainClassName = "tachiload.app.AppKt"
}


tasks {
    // See https://kotlinlang.org/docs/reference/experimental.html#experimental-status-of-experimental-api(-markers)
    withType<KotlinCompile> {
        kotlinOptions.freeCompilerArgs += listOf(
            "-Xopt-in=kotlin.Experimental",
            "-Xopt-in=kotlin.RequiresOptIn",
            "-Xuse-experimental=kotlin.ExperimentalStdlibApi",
            "-Xuse-experimental=kotlinx.coroutines.FlowPreview",
            "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-Xuse-experimental=kotlinx.coroutines.InternalCoroutinesApi",
            "-Xuse-experimental=kotlinx.serialization.ExperimentalSerializationApi"
        )
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8.toString()
        }
    }
}